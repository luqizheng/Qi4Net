@using MvcTest.Models
@model MvcTest.Models.ListDemo
@{
    ViewBag.Title = "title";
    var roles = (ViewData["roles"]) as IList<Role>;
    var users = (ViewData["users"]) as IList<User>;
}
<h2>
    Array UsersByLoginId: use PropertyFounder to find the users by loginId</h2>
<form method="POST">
<table>
    @foreach (var user in users)
    {
        <tr>
            <td>
                <input type="checkbox" name="UsersByLoginId" value="@user.LoginId">@user.LoginId</input>
            </td>
            <td>
                @user.Name
            </td>
        </tr>
    }
</table>
<h2>
    Array UsersById: use default founder(IdFounder) to find users.</h2>
<form method="POST">
<table>
    @foreach (var user in users)
    {
        <tr>
            <td>
                <input type="checkbox" name="UsersById" value="@user.Id">@user.LoginId</input>
            </td>
            <td>
                @user.Name
            </td>
        </tr>
    }
</table>
<h2>
    IList Roles:</h2>
<table>
    @foreach (var role in roles)
    {
        <tr>
            <td>
                <input type="checkbox" name="Roles" value="@role.Id"/>
            </td>
            <td>
                @role.Name
            </td>
        </tr>
    }
</table>
<h2>
    ISet Roles:</h2>
<table>
    @foreach (var role in roles)
    {
        <tr>
            <td>
                <input type="checkbox" name="RolesBySet" value="@role.Id"/>
            </td>
            <td>
                @role.Name
            </td>
        </tr>
    }
</table>
<h2>
    Hql founder for selecting user,Hql use "like" to f
</h2>
<div>
    <input type="text" name="UserByHql" />
</div>
@if (this.Model != null)
{
    <h4>
        You selected:</h4>
    @Html.Raw(this.Model.ToString().Replace("\r\n", "<br>"));
}
<input value="submt" type="submit" />
</form>
